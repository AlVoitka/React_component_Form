https://reactcommunity.org/react-transition-group/

Библиотека анимации переходов React Transition Group

1.
Устанавливаю пакет в проект

npm install react-transition-group --save

2.
Импортрую компонент Transition  компонент App:
тут у меня сам компонетнт функциональный и модальное окно в переменной.

import {useState} from 'react';
import { Transition } from 'react-transition-group';  -------------------- вот
import {Container} from 'react-bootstrap';
import './App.css';

const Modal = (props) => {

    return (
        <div className="modal mt-5 d-block">
            <div className="modal-dialog">
                <div className="modal-content">
                <div className="modal-header">
                    <h5 className="modal-title">Typical modal window</h5>
                    <button onClick={() => props.onClose(false)} type="button" className="btn-close" aria-label="Close"></button>
                </div>
                <div className="modal-body">
                    <p>Modal body content</p>
                </div>
                <div className="modal-footer">
                    <button onClick={() => props.onClose(false)} type="button" className="btn btn-secondary">Close</button>
                    <button onClick={() => props.onClose(false)} type="button" className="btn btn-primary">Save changes</button>
                </div>
                </div>
            </div>
        </div>
    )
}

function App() {
    const [showModal, setShowModal] = useState(false);

    return (
        <Container>
            {showModal ? <Modal onClose={setShowModal}/> : null}
            <button 
                type="button" 
                className="btn btn-warning mt-5"
                onClick={() => setShowModal(true)}>Open Modal
            </button>
        </Container>
    );
}

export default App;


3.

Код из документации подсставляю в модальное окно, тк онимация будет на нем:

            const duration = 300; ------------- продолжительность анимации 300мс

            const defaultStyle = {   ---------------   объект с бефолтными стилями на основе опасити анимация
                transition: `opacity ${duration}ms ease-in-out`,
                opacity: 0,
            }

            const transitionStyles = {  ---------- стили на переходных этапах
            entering: { opacity: 1 },
            entered:  { opacity: 1 },
            exiting:  { opacity: 0 },
            exited:  { opacity: 0 },
            };


получилось:

const Modal = (props) => {

    const duration = 300;

    const defaultStyle = {
        transition: `opacity ${duration}ms ease-in-out`,
        opacity: 0,
    }

    const transitionStyles = {
        entering: { opacity: 1 },
        entered:  { opacity: 1 },
        exiting:  { opacity: 0 },
        exited:  { opacity: 0 },
    };

    return (
        <div className="modal mt-5 d-block">
            <div className="modal-dialog">
                <div className="modal-content">
                <div className="modal-header">
                    <h5 className="modal-title">Typical modal window</h5>
                    <button onClick={() => props.onClose(false)} type="button" className="btn-close" aria-label="Close"></button>
                </div>
                <div className="modal-body">
                    <p>Modal body content</p>
                </div>
                <div className="modal-footer">
                    <button onClick={() => props.onClose(false)} type="button" className="btn btn-secondary">Close</button>
                    <button onClick={() => props.onClose(false)} type="button" className="btn btn-primary">Save changes</button>
                </div>
                </div>
            </div>
        </div>
    )
}

4.
Теперь применяю

const Modal = (props) => {

    const duration = 300;

    const defaultStyle = {
        transition: `opacity ${duration}ms ease-in-out`,
        opacity: 0,
    }

    const transitionStyles = {
        entering: { opacity: 1 },
        entered:  { opacity: 1 },
        exiting:  { opacity: 0 },
        exited:  { opacity: 0 },
    };

    return (        ------- вот тут в методе нужно все верстку обернуть в эту структуру и поместить в ()
        <Transition>
            {state => ()}
        </Transition>
    )
}

5.

const Modal = (props) => {

    const duration = 300;

    const defaultStyle = {
        transition: `opacity ${duration}ms ease-in-out`,
        opacity: 0,
    }

    const transitionStyles = {
        entering: { opacity: 1 },
        entered:  { opacity: 1 },
        exiting:  { opacity: 0 },
        exited:  { opacity: 0 },
    };

    return (
        <Transition>
            {state => (
                <div className="modal mt-5 d-block">
                <div className="modal-dialog">
                    <div className="modal-content">
                    <div className="modal-header">
                        <h5 className="modal-title">Typical modal window</h5>
                        <button onClick={() => props.onClose(false)} type="button" className="btn-close" aria-label="Close"></button>
                    </div>
                    <div className="modal-body">
                        <p>Modal body content</p>
                    </div>
                    <div className="modal-footer">
                        <button onClick={() => props.onClose(false)} type="button" className="btn btn-secondary">Close</button>
                        <button onClick={() => props.onClose(false)} type="button" className="btn btn-primary">Save changes</button>
                    </div>
                    </div>
                </div>
            </div>
            )}
        </Transition>
    )
}

6.
Теперь компоненту <Transition> нужно передать 2 базовых пропа:

timeout  -- это время срабатывания и в него передаю переменную {duration}

in  -- этот проп переключаемый те должен менятся c true/false и внего нужно передавать сотояние,
соответсвенно у радительскjuj элемента App как раз и есть состояние showModal:

function App() {
    const [showModal, setShowModal] = useState(false); ---- вот оно со значением false

итог:

const Modal = (props) => {

    const duration = 900;

    const defaultStyle = {
        transition: `all ${duration}ms ease-in-out`,
        opacity: 0,
        visibility: 'hidden'  ----6. конкретно тут нужно было дабовать visibility тк из будстрапа пришла херня по стилям
    }

    const transitionStyles = {
        entering: { opacity: 1,visibility: 'visible' },  ---5. и вот тут уже назначаю что нужно сделать с ними на входе и выходе
        entered:  { opacity: 1, visibility: 'visible' },
        exiting:  { opacity: 0, visibility: 'hidden' },
        exited:  { opacity: 0, visibility: 'hidden' },
    };

return (
        <Transition in={props.show} timeout={duration}>  ---3. вот этот спойство принемаю как проп
            {state => (
                <div className="modal mt-5 d-block" style={{  ---4. добавляю инлайн стили из документации на окно
                    ...defaultStyle,
                    ...transitionStyles[state]
                  }}>
                    <div className="modal-dialog">
                        <div className="modal-content">
                        <div className="modal-header">
                            <h5 className="modal-title">Typical modal window</h5>
                            <button onClick={() => props.onClose(false)} type="button" className="btn-close" aria-label="Close"></button>
                        </div>
                        <div className="modal-body">
                            <p>Modal body content</p>
                        </div>
                        <div className="modal-footer">
                            <button onClick={() => props.onClose(false)} type="button" className="btn btn-secondary">Close</button>
                            <button onClick={() => props.onClose(false)} type="button" className="btn btn-primary">Save changes</button>
                        </div>
                        </div>
                    </div>
                </div>
            )}
        </Transition>
    )
}

function App() {
    const [showModal, setShowModal] = useState(false);---- 1. вот свойство со значением false

    return (
        <Container>
            <Modal show={showModal} onClose={setShowModal}/> ---- 2. вот передаю его как проп show
            <button 
                type="button" 
                className="btn btn-warning mt-5"
                onClick={() => setShowModal(true)}>Open Modal
            </button>
        </Container>
    );
}




    нужно смотреть ур 182

